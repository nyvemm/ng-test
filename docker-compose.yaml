services:
  db:
    image: postgres:alpine
    container_name: backend_challenge_db
    build:
      context: ./backend/src/infra/db
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      start_period: 10s
      timeout: 4s
      retries: 3

  backend:
    container_name: backend_challenge
    command: sh -c "npm run migrate && npm run dev"
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    links:
      - db
    depends_on:
      - db
    environment:
      DB_HOST: host.docker.internal
      DB_USER: postgres
      DB_PASSWORD: postgres
      JWT_SECRET: 123456
      PORT: 3000

  frontend:
    container_name: frontend_challenge
    command: sh -c "yarn dev"
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    depends_on:
      - backend

  webserver:
    container_name: frontend_challenge_webserver
    image: nginx:alpine
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
